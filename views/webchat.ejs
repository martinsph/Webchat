<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="/socket.io/socket.io.js"></script>
  <title>Project Webchat</title>
</head>
<body>
  <ul id="users"></ul>
  <ul id="messages"></ul>

  <form action="" id="nicknameForm">
    <input type="text "id="nicknameInput" placeholder="enter nickname here" data-testid="nickname-box" />
    <button type="submit" id="nicknameButton" data-testid="nickname-button">Save Nickname</button>
  </form>  
  
  <form action="" id="messageForm">
    <input type="text" id="messageInput" placeholder="your message goes here" autocomplete="off" data-testid="message-box" />
    <button type="submit" id="messageButton" data-testid="send-button">Send</button>
  </form>
  
  <script>
    const socket = window.io();
    const usersUl = document.querySelector('#users');
    // evento nickname
    const nicknameForm = document.querySelector('#nicknameForm');
    const nicknameInput = document.querySelector('#nicknameInput');
    
    nicknameForm.addEventListener('submit', (e) => {
      e.preventDefault();
      const currentUser = socket.id;
      const newNickname = nicknameInput.value;
      sessionStorage.setItem('nickname', newNickname);
      socket.emit('setNewNickname', { currentUser, newNickname });
      nicknameInput.value = '';
      return false;
    });

    // evento message box
    const messageform = document.querySelector('#messageForm');
    const messageInput = document.querySelector('#messageInput');

    messageform.addEventListener('submit', (e) => {
      e.preventDefault();
      socket.emit('message', {
        nickname: sessionStorage.getItem('nickname'),
        chatMessage: messageInput.value
      });
      messageInput.value = '';
      return false;
    });

    // função para criar lista de usuários na tela
    const onlineUsersBox = (users) => {
      const usersList = Object.entries(users)
      const currentUser = sessionStorage.getItem('nickname');
      usersUl.innerHTML = `<li data-testid="online-user">${currentUser}</li>`;
      usersList.forEach(([userId, nickname]) => {
        console.log(nickname);
        if(nickname !== currentUser) {
          usersUl.innerHTML += `<li data-testid="online-user">${nickname}</li>`
        }
      })

    };

    // função para criar menssagem na tela
    const messageBox = (message) => {
      const messageUl = document.querySelector('#messages');
      const newMessageli = document.createElement('li');

      newMessageli.innerText = message;
      newMessageli.setAttribute('data-testid', 'message');
      messageUl.appendChild(newMessageli);
    };

    // função para criar historico na tela
    const historyBox = (chatHistory) => {
      console.log(chatHistory);
      const messageUl = document.querySelector('#messages');
      chatHistory.forEach(({ message, nickname, timestamp }) => {
        const newMessageli = document.createElement('li');
        const newMessage = `${timestamp} - ${nickname}: ${message}`;
        newMessageli.innerText = newMessage;
        newMessageli.setAttribute('data-testid', 'message');
        messageUl.appendChild(newMessageli);
      });
    };

    // evento socket para menssagens na tela
    socket.on('defaultNickname', (defaultNick) => {
      sessionStorage.setItem('nickname', defaultNick)
    });
    socket.on('userConnect', onlineUsersBox )
    socket.on('userDisconnect', onlineUsersBox )
    socket.on('setNickname', onlineUsersBox )
    socket.on('message', (message) => messageBox(message));
    socket.on('chatHistory', (chatHistory) => historyBox(chatHistory));

  </script>
</body>
</html> 
